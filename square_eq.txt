//____SQUARE_EQUATION_SOLVER_ASM______//


in          // input of coefficients
in          // ax^2 + bx + c = 0
in          //
pop cx     //
pop bx     //
pop ax     //

push 0
pop R12    // number of roots

push 0     //R10 = R11 = 0
pop R10    //
push 0     //
pop R11    //


push ax     // if ax == 0
push 0      // then solve a linear
je linear_eq:




// ax != 0

push bx     //
push bx     // bx^2
mul         //

push 4      // 4*ax*cx
push ax     //
push cx     //
mul         //
mul         //

sub         // bx^2 -  4*ax*cx

pop R4

push 0      //
push R4     // if R4 < 0
jb END:     // end


push R4    //
sqrt       //
pop R4     // R4^2 - discriminant

push -1    // -R4
push R4    //
mul        //
pop R4     //


call square_eq:     //
//push dx     //
pop R10     // x0 = R10



push -1     //+R4
push R4     //
mul         //
pop R4      //

call square_eq:     //
//push dx     //
pop R11     // x1 = R11


push R10    //
push R11    //


push 1      //
pop R12     // nroots = 1

je END:       // if x0==x1 goto 4
push 2      // x0 != x1
pop R12     // nroots = 2



END:          // END



push R12    // if nroots != 0
push 0      //
jne 8:      //

// if nroots == 0
push 0
out
end

8:
push R12    // if nroots != 1
push 1      //
jne 9:      //

// nroots == 1

push R10
push R12

out
out

end

9:
push R12
push 2

jne 0:
// if nroots == 2

push R11
push R10
push R12

out
out
out
end

0:

// nroots == 3
push 8
push 8
push 8

out
out
out

end


//___count roots___//
square_eq:

push bx     // -bx
push -1     //
mul         //

push R4    //
add         // -bx +/- R4

push 2      //
push ax     //
mul         //
div         // (-bx +/- R4) / (2 * ax)

//pop dx     // x = dx
ret


//___linear_equation___//
linear_eq:

push cx      // jmp = 1
push 0
je 5:       // if cx == 0

push 0
push bx

je 7:
push 1
pop R12

push cx
push -1
mul

push bx
div
pop R10

7:
jmp END:



5:
push bx
push 0
jne 6:      // if bx!=0

push 3     // nroots = inf
pop R12    //
jmp END:

6:
push 1
pop R12  // one root = 0

push 0
pop R10

jmp END:



